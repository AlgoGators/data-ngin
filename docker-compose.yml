services:


  airflow-init:
    build:
      context: .
      dockerfile: DockerFile
    container_name: airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:algogators@172.31.23.190:5432/algo_data?options=-csearch_path%3Dairflow_metadata
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "true"
      PYTHONPATH: /opt/airflow/data_engine
    volumes:
      - ./dags:/opt/airflow/dags
      - .:/opt/airflow/data_engine
      - airflow_data:/opt/airflow
    command: >
      bash -c "airflow db migrate &&
               airflow connections create-default-connections"

  airflow-webserver:
    build:
      context: .
      dockerfile: DockerFile
    container_name: airflow-webserver
    restart: always
    depends_on:
      - airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:algogators@172.31.23.190:5432/algo_data?options=-csearch_path%3Dairflow_metadata
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "true"
      PYTHONPATH: /opt/airflow/data_engine
    volumes:
      - ./dags:/opt/airflow/dags
      - .:/opt/airflow/data_engine
      - airflow_data:/opt/airflow
    ports:
      - "8080:8080"
    command: ["airflow", "webserver"]

  airflow-scheduler:
    build:
      context: .
      dockerfile: DockerFile
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:algogators@172.31.23.190:5432/algo_data?options=-csearch_path%3Dairflow_metadata
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "true"
      PYTHONPATH: /opt/airflow/data_engine
    volumes:
      - ./dags:/opt/airflow/dags
      - .:/opt/airflow/data_engine
      - airflow_data:/opt/airflow
    command: ["airflow", "scheduler"]

volumes:
  db_data:
  airflow_data:
